#spring.application.name=comercialcar

server.port=8080

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

spring.jpa.properties.jakarta.persistence.sharedCache.mode=ALL
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Connection url for the database "netgloo_blog"
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://mysql.railway.internal:3306/railway
#spring.datasource.url = jdbc:mysql://172.30.171.61:3306/mddb?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = hNAARpMVLUNpIsLECszlyITsmBlipQge

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
